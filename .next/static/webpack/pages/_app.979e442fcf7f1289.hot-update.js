"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/server/db-api.ts":
/*!******************************!*\
  !*** ./src/server/db-api.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchBlogPosts: () => (/* binding */ fetchBlogPosts),\n/* harmony export */   submitContactForm: () => (/* binding */ submitContactForm),\n/* harmony export */   subscribeToNewsletter: () => (/* binding */ subscribeToNewsletter),\n/* harmony export */   updateUserAchievements: () => (/* binding */ updateUserAchievements)\n/* harmony export */ });\n// This file contains API functions to access the database,\n// ensuring database operations only happen on the server-side\n/**\n * Update user achievement data in the PostgreSQL database\n */ async function updateUserAchievements(userId, achievementsData, progressValue) {\n    try {\n        const response = await fetch('/api/simple-achievements', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                userId,\n                achievements: achievementsData,\n                progress: progressValue\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to update achievements: \".concat(response.status));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error updating achievements:', error);\n        throw error;\n    }\n}\n/**\n * Fetch blog posts from the PostgreSQL database\n */ async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, tag = arguments.length > 2 ? arguments[2] : void 0;\n    try {\n        let url = \"/api/blog-pg?page=\".concat(page, \"&limit=\").concat(limit);\n        if (tag) {\n            url += \"&tag=\".concat(encodeURIComponent(tag));\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch blog posts: \".concat(response.status));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching blog posts:', error);\n        throw error;\n    }\n}\n/**\n * Subscribe to newsletter using PostgreSQL database\n */ async function subscribeToNewsletter(email, name, source) {\n    try {\n        const response = await fetch('/api/newsletter-pg', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                name,\n                source\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to subscribe to newsletter: \".concat(response.status));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error subscribing to newsletter:', error);\n        throw error;\n    }\n}\n/**\n * Submit contact form data to PostgreSQL database\n */ async function submitContactForm(formData) {\n    try {\n        const response = await fetch('/api/contact-pg', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to submit contact form: \".concat(response.status));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error submitting contact form:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9zZXJ2ZXIvZGItYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSwyREFBMkQ7QUFDM0QsOERBQThEO0FBRTlEOztDQUVDLEdBQ00sZUFBZUEsdUJBQXVCQyxNQUFjLEVBQUVDLGdCQUFxQixFQUFFQyxhQUFxQjtJQUN2RyxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLDRCQUE0QjtZQUN2REMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CVDtnQkFDQVUsY0FBY1Q7Z0JBQ2RVLFVBQVVUO1lBQ1o7UUFDRjtRQUVBLElBQUksQ0FBQ0MsU0FBU1MsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSxrQ0FBa0QsT0FBaEJWLFNBQVNXLE1BQU07UUFDbkU7UUFFQSxPQUFPLE1BQU1YLFNBQVNZLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLE1BQU1BO0lBQ1I7QUFDRjtBQUVBOztDQUVDLEdBQ00sZUFBZUU7UUFBZUMsT0FBQUEsaUVBQU8sR0FBR0MsUUFBQUEsaUVBQVEsSUFBSUM7SUFDekQsSUFBSTtRQUNGLElBQUlDLE1BQU0scUJBQW1DRixPQUFkRCxNQUFLLFdBQWUsT0FBTkM7UUFDN0MsSUFBSUMsS0FBSztZQUNQQyxPQUFPLFFBQWdDLE9BQXhCQyxtQkFBbUJGO1FBQ3BDO1FBRUEsTUFBTWxCLFdBQVcsTUFBTUMsTUFBTWtCO1FBQzdCLElBQUksQ0FBQ25CLFNBQVNTLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU0sK0JBQStDLE9BQWhCVixTQUFTVyxNQUFNO1FBQ2hFO1FBRUEsT0FBTyxNQUFNWCxTQUFTWSxJQUFJO0lBQzVCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxNQUFNQTtJQUNSO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVRLHNCQUFzQkMsS0FBYSxFQUFFQyxJQUFhLEVBQUVDLE1BQWU7SUFDdkYsSUFBSTtRQUNGLE1BQU14QixXQUFXLE1BQU1DLE1BQU0sc0JBQXNCO1lBQ2pEQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJnQjtnQkFDQUM7Z0JBQ0FDO1lBQ0Y7UUFDRjtRQUVBLElBQUksQ0FBQ3hCLFNBQVNTLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU0sc0NBQXNELE9BQWhCVixTQUFTVyxNQUFNO1FBQ3ZFO1FBRUEsT0FBTyxNQUFNWCxTQUFTWSxJQUFJO0lBQzVCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxNQUFNQTtJQUNSO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVZLGtCQUFrQkMsUUFBYTtJQUNuRCxJQUFJO1FBQ0YsTUFBTTFCLFdBQVcsTUFBTUMsTUFBTSxtQkFBbUI7WUFDOUNDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDb0I7UUFDdkI7UUFFQSxJQUFJLENBQUMxQixTQUFTUyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLGtDQUFrRCxPQUFoQlYsU0FBU1csTUFBTTtRQUNuRTtRQUVBLE9BQU8sTUFBTVgsU0FBU1ksSUFBSTtJQUM1QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9zZXJ2ZXIvZGItYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSBjb250YWlucyBBUEkgZnVuY3Rpb25zIHRvIGFjY2VzcyB0aGUgZGF0YWJhc2UsXG4vLyBlbnN1cmluZyBkYXRhYmFzZSBvcGVyYXRpb25zIG9ubHkgaGFwcGVuIG9uIHRoZSBzZXJ2ZXItc2lkZVxuXG4vKipcbiAqIFVwZGF0ZSB1c2VyIGFjaGlldmVtZW50IGRhdGEgaW4gdGhlIFBvc3RncmVTUUwgZGF0YWJhc2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVVzZXJBY2hpZXZlbWVudHModXNlcklkOiBzdHJpbmcsIGFjaGlldmVtZW50c0RhdGE6IGFueSwgcHJvZ3Jlc3NWYWx1ZTogbnVtYmVyKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9zaW1wbGUtYWNoaWV2ZW1lbnRzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICB1c2VySWQsXG4gICAgICAgIGFjaGlldmVtZW50czogYWNoaWV2ZW1lbnRzRGF0YSxcbiAgICAgICAgcHJvZ3Jlc3M6IHByb2dyZXNzVmFsdWUsXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSBhY2hpZXZlbWVudHM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgIH1cblxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgYWNoaWV2ZW1lbnRzOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIEZldGNoIGJsb2cgcG9zdHMgZnJvbSB0aGUgUG9zdGdyZVNRTCBkYXRhYmFzZVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hCbG9nUG9zdHMocGFnZSA9IDEsIGxpbWl0ID0gMTAsIHRhZz86IHN0cmluZykge1xuICB0cnkge1xuICAgIGxldCB1cmwgPSBgL2FwaS9ibG9nLXBnP3BhZ2U9JHtwYWdlfSZsaW1pdD0ke2xpbWl0fWA7XG4gICAgaWYgKHRhZykge1xuICAgICAgdXJsICs9IGAmdGFnPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRhZyl9YDtcbiAgICB9XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggYmxvZyBwb3N0czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBibG9nIHBvc3RzOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIFN1YnNjcmliZSB0byBuZXdzbGV0dGVyIHVzaW5nIFBvc3RncmVTUUwgZGF0YWJhc2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1YnNjcmliZVRvTmV3c2xldHRlcihlbWFpbDogc3RyaW5nLCBuYW1lPzogc3RyaW5nLCBzb3VyY2U/OiBzdHJpbmcpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL25ld3NsZXR0ZXItcGcnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBuYW1lLFxuICAgICAgICBzb3VyY2UsXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHN1YnNjcmliZSB0byBuZXdzbGV0dGVyOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1YnNjcmliaW5nIHRvIG5ld3NsZXR0ZXI6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbi8qKlxuICogU3VibWl0IGNvbnRhY3QgZm9ybSBkYXRhIHRvIFBvc3RncmVTUUwgZGF0YWJhc2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1Ym1pdENvbnRhY3RGb3JtKGZvcm1EYXRhOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2NvbnRhY3QtcGcnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShmb3JtRGF0YSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzdWJtaXQgY29udGFjdCBmb3JtOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1Ym1pdHRpbmcgY29udGFjdCBmb3JtOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufSJdLCJuYW1lcyI6WyJ1cGRhdGVVc2VyQWNoaWV2ZW1lbnRzIiwidXNlcklkIiwiYWNoaWV2ZW1lbnRzRGF0YSIsInByb2dyZXNzVmFsdWUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWNoaWV2ZW1lbnRzIiwicHJvZ3Jlc3MiLCJvayIsIkVycm9yIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImZldGNoQmxvZ1Bvc3RzIiwicGFnZSIsImxpbWl0IiwidGFnIiwidXJsIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic3Vic2NyaWJlVG9OZXdzbGV0dGVyIiwiZW1haWwiLCJuYW1lIiwic291cmNlIiwic3VibWl0Q29udGFjdEZvcm0iLCJmb3JtRGF0YSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/server/db-api.ts\n"));

/***/ })

});