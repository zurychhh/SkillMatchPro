"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/context/AchievementContext.tsx":
/*!********************************************!*\
  !*** ./src/context/AchievementContext.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AchievementContext: () => (/* binding */ AchievementContext),\n/* harmony export */   AchievementProvider: () => (/* binding */ AchievementProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/constants */ \"(pages-dir-browser)/./src/lib/constants.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(pages-dir-browser)/./src/lib/utils.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n// Default context value\nconst defaultContextValue = {\n    achievements: [],\n    progress: 0,\n    level: 'Explorer',\n    newAchievement: null,\n    recordVisit: ()=>{},\n    recordRead: ()=>{},\n    recordAction: ()=>{}\n};\n// Create the achievement context\nconst AchievementContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContextValue);\nconst AchievementProvider = (param)=>{\n    let { children } = param;\n    _s();\n    // State for achievements and progress\n    const [achievements, setAchievements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [level, setLevel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('Explorer');\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [newAchievement, setNewAchievement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [progressData, setProgressData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visits: {},\n        reads: [],\n        actions: {}\n    });\n    // Initialize user ID and load achievements from localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            // Get or create user ID\n            let id = localStorage.getItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.USER_ID);\n            if (!id) {\n                id = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.generateId)();\n                localStorage.setItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.USER_ID, id);\n            }\n            setUserId(id);\n            // Load achievement data from localStorage\n            const storedAchievements = localStorage.getItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.ACHIEVEMENTS);\n            if (storedAchievements) {\n                try {\n                    const parsedAchievements = JSON.parse(storedAchievements);\n                    setAchievements(parsedAchievements);\n                } catch (error) {\n                    console.error('Error parsing stored achievements:', error);\n                    setAchievements(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ACHIEVEMENTS);\n                }\n            } else {\n                setAchievements(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ACHIEVEMENTS);\n            }\n            // Load progress from localStorage\n            const storedProgress = localStorage.getItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.PROGRESS);\n            if (storedProgress) {\n                const progressValue = parseFloat(storedProgress);\n                setProgress(progressValue);\n                setLevel((0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.determineLevel)(progressValue));\n            }\n            // Load progress data\n            const storedProgressData = localStorage.getItem('oleksiak_progress_data');\n            if (storedProgressData) {\n                try {\n                    setProgressData(JSON.parse(storedProgressData));\n                } catch (error) {\n                    console.error('Error parsing progress data:', error);\n                }\n            }\n        }\n    }[\"AchievementProvider.useEffect\"], []);\n    // Save achievements to localStorage when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            if (achievements.length > 0) {\n                localStorage.setItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.ACHIEVEMENTS, JSON.stringify(achievements));\n            }\n        }\n    }[\"AchievementProvider.useEffect\"], [\n        achievements\n    ]);\n    // Save progress data to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            localStorage.setItem('oleksiak_progress_data', JSON.stringify(progressData));\n        }\n    }[\"AchievementProvider.useEffect\"], [\n        progressData\n    ]);\n    // Save progress and level to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            localStorage.setItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.PROGRESS, progress.toString());\n            localStorage.setItem(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.STORAGE_KEYS.LEVEL, level);\n        }\n    }[\"AchievementProvider.useEffect\"], [\n        progress,\n        level\n    ]);\n    // Sync achievements with the server\n    const syncWithServer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AchievementProvider.useCallback[syncWithServer]\": async ()=>{\n            if (!userId) return;\n            try {\n                const response = await fetch(_lib_constants__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.ACHIEVEMENTS, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        userId,\n                        achievements,\n                        progress\n                    })\n                });\n                const data = await response.json();\n                if (data.success) {\n                    // Update level if server has a different value\n                    if (data.level !== level) {\n                        setLevel(data.level);\n                    }\n                }\n            } catch (error) {\n                console.error('Error syncing achievements:', error);\n            }\n        }\n    }[\"AchievementProvider.useCallback[syncWithServer]\"], [\n        userId,\n        achievements,\n        progress,\n        level\n    ]);\n    // Sync with server when achievements or progress change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            if (achievements.length > 0 && userId) {\n                syncWithServer();\n            }\n        }\n    }[\"AchievementProvider.useEffect\"], [\n        achievements,\n        progress,\n        userId,\n        syncWithServer\n    ]);\n    // Check achievements and update progress\n    const checkAchievements = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AchievementProvider.useCallback[checkAchievements]\": ()=>{\n            let updated = false;\n            let totalEarnedPoints = 0;\n            const updatedAchievements = achievements.map({\n                \"AchievementProvider.useCallback[checkAchievements].updatedAchievements\": (achievement)=>{\n                    // Skip already completed achievements\n                    if (achievement.completed) {\n                        totalEarnedPoints += achievement.points;\n                        return achievement;\n                    }\n                    // Check if criteria are met\n                    let criteriaFulfilled = true;\n                    // Check visit criteria\n                    if (achievement.criteria.visits) {\n                        for (const [page, count] of Object.entries(achievement.criteria.visits)){\n                            const userVisits = progressData.visits[page] || 0;\n                            if (userVisits < count) {\n                                criteriaFulfilled = false;\n                                break;\n                            }\n                        }\n                    }\n                    // Check read criteria\n                    if (criteriaFulfilled && achievement.criteria.reads) {\n                        if (progressData.reads.length < achievement.criteria.reads) {\n                            criteriaFulfilled = false;\n                        }\n                    }\n                    // Check action criteria\n                    if (criteriaFulfilled && achievement.criteria.actions) {\n                        for (const [action, count] of Object.entries(achievement.criteria.actions)){\n                            const userActions = progressData.actions[action] || 0;\n                            if (userActions < count) {\n                                criteriaFulfilled = false;\n                                break;\n                            }\n                        }\n                    }\n                    // Update achievement if criteria are fulfilled\n                    if (criteriaFulfilled && !achievement.completed) {\n                        updated = true;\n                        // Set newly completed achievement for notification\n                        setNewAchievement({\n                            ...achievement\n                        });\n                        // Clear notification after 5 seconds\n                        setTimeout({\n                            \"AchievementProvider.useCallback[checkAchievements].updatedAchievements\": ()=>{\n                                setNewAchievement(null);\n                            }\n                        }[\"AchievementProvider.useCallback[checkAchievements].updatedAchievements\"], 5000);\n                        totalEarnedPoints += achievement.points;\n                        return {\n                            ...achievement,\n                            completed: true,\n                            completedAt: new Date()\n                        };\n                    }\n                    return achievement;\n                }\n            }[\"AchievementProvider.useCallback[checkAchievements].updatedAchievements\"]);\n            if (updated) {\n                setAchievements(updatedAchievements);\n            }\n            // Update progress\n            const newProgress = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.calculateProgress)(totalEarnedPoints);\n            if (newProgress !== progress) {\n                setProgress(newProgress);\n                setLevel((0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.determineLevel)(newProgress));\n            }\n        }\n    }[\"AchievementProvider.useCallback[checkAchievements]\"], [\n        achievements,\n        progressData,\n        progress\n    ]);\n    // Record a page visit\n    const recordVisit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AchievementProvider.useCallback[recordVisit]\": (page)=>{\n            setProgressData({\n                \"AchievementProvider.useCallback[recordVisit]\": (prev)=>{\n                    const visits = {\n                        ...prev.visits\n                    };\n                    visits[page] = (visits[page] || 0) + 1;\n                    return {\n                        ...prev,\n                        visits\n                    };\n                }\n            }[\"AchievementProvider.useCallback[recordVisit]\"]);\n        }\n    }[\"AchievementProvider.useCallback[recordVisit]\"], []);\n    // Record a blog post read\n    const recordRead = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AchievementProvider.useCallback[recordRead]\": (postId)=>{\n            setProgressData({\n                \"AchievementProvider.useCallback[recordRead]\": (prev)=>{\n                    // Only add the post ID if it's not already in the array\n                    if (!prev.reads.includes(postId)) {\n                        return {\n                            ...prev,\n                            reads: [\n                                ...prev.reads,\n                                postId\n                            ]\n                        };\n                    }\n                    return prev;\n                }\n            }[\"AchievementProvider.useCallback[recordRead]\"]);\n        }\n    }[\"AchievementProvider.useCallback[recordRead]\"], []);\n    // Record a user action\n    const recordAction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AchievementProvider.useCallback[recordAction]\": (action)=>{\n            setProgressData({\n                \"AchievementProvider.useCallback[recordAction]\": (prev)=>{\n                    const actions = {\n                        ...prev.actions\n                    };\n                    actions[action] = (actions[action] || 0) + 1;\n                    return {\n                        ...prev,\n                        actions\n                    };\n                }\n            }[\"AchievementProvider.useCallback[recordAction]\"]);\n        }\n    }[\"AchievementProvider.useCallback[recordAction]\"], []);\n    // Check achievements when progress data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AchievementProvider.useEffect\": ()=>{\n            checkAchievements();\n        }\n    }[\"AchievementProvider.useEffect\"], [\n        progressData,\n        checkAchievements\n    ]);\n    // Context value\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"AchievementProvider.useMemo[contextValue]\": ()=>({\n                achievements,\n                progress,\n                level,\n                newAchievement,\n                recordVisit,\n                recordRead,\n                recordAction\n            })\n    }[\"AchievementProvider.useMemo[contextValue]\"], [\n        achievements,\n        progress,\n        level,\n        newAchievement,\n        recordVisit,\n        recordRead,\n        recordAction\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AchievementContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/runner/workspace/src/context/AchievementContext.tsx\",\n        lineNumber: 266,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AchievementProvider, \"4HTaew67G6BIiYey+y4yfHKliaQ=\");\n_c = AchievementProvider;\nvar _c;\n$RefreshReg$(_c, \"AchievementProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/context/AchievementContext.tsx\n"));

/***/ })

});